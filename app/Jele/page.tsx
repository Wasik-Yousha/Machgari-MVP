"use client"

import { useState } from "react"
import Image from "next/image"
// import { useSession } from "next-auth/react" // Commented out
// import { redirect } from "next/navigation" // Commented out
import { Header } from "@/components/header"
import { Footer } from "@/components/footer"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { FishEntryForm } from "@/components/fish-entry-form"
import { FishCard } from "@/components/fish-card"
import { WholesaleMarketCard } from "@/components/wholesale-market-card"
import { UserProfile } from "@/components/user-profile"
import { FarmingProfileManager } from "@/components/farming-profile-manager"
import { JeleTransactionsTab } from "@/components/jele-transactions-tab"
import { useFishData } from "@/contexts/fish-data-context"
import { Plus } from "lucide-react"

// Sample wholesale market data
const wholesaleMarkets = [
  {
    id: 1,
    name: "‡¶ï‡¶æ‡¶ì‡¶∞‡¶æ‡¶® ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶Ü‡¶°‡¶º‡¶§",
    location: "‡¶¢‡¶æ‡¶ï‡¶æ",
    distance: "‡ß´ ‡¶ï‡¶ø‡¶Æ‡¶ø",
    prices: [
      { fish: "‡¶∞‡ßÅ‡¶á", price: "‡ß©‡ß´‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
      { fish: "‡¶ï‡¶æ‡¶§‡¶≤‡¶æ", price: "‡ß©‡ßÆ‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
      { fish: "‡¶á‡¶≤‡¶ø‡¶∂", price: "‡ßß‡ß®‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
    ],
    rating: 4.5,
    contact: "‡ß¶‡ßß‡ß≠‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ",
  },
  {
    id: 2,
    name: "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Æ‡ßé‡¶∏‡ßç‡¶Ø ‡¶Ü‡¶°‡¶º‡¶§",
    location: "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ",
    distance: "‡ßß‡ß®‡ß¶ ‡¶ï‡¶ø‡¶Æ‡¶ø",
    prices: [
      { fish: "‡¶∞‡ßÅ‡¶á", price: "‡ß©‡ß¨‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
      { fish: "‡¶ï‡¶æ‡¶§‡¶≤‡¶æ", price: "‡ß©‡ßØ‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
      { fish: "‡¶á‡¶≤‡¶ø‡¶∂", price: "‡ßß‡ß®‡ß´‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
    ],
    rating: 4.2,
    contact: "‡ß¶‡ßß‡ßÆ‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ",
  },
  {
    id: 3,
    name: "‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ ‡¶Æ‡ßé‡¶∏‡ßç‡¶Ø ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞",
    location: "‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ",
    distance: "‡ßÆ‡ß¶ ‡¶ï‡¶ø‡¶Æ‡¶ø",
    prices: [
      { fish: "‡¶∞‡ßÅ‡¶á", price: "‡ß©‡ß™‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
      { fish: "‡¶ï‡¶æ‡¶§‡¶≤‡¶æ", price: "‡ß©‡ß≠‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
      { fish: "‡¶á‡¶≤‡¶ø‡¶∂", price: "‡ßß‡ßß‡ßÆ‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø" },
    ],
    rating: 4.7,
    contact: "‡ß¶‡ßß‡ßØ‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ",
  },
]

// User profile data - Now using a static profile for direct access
const staticUserProfile = {
  name: "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤ ‡¶ï‡¶∞‡¶ø‡¶Æ (‡¶ú‡ßá‡¶≤‡ßá)",
  role: "‡¶ú‡ßá‡¶≤‡ßá",
  phone: "‡ß¶‡ßß‡ß≠‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ",
  location: "‡¶ö‡¶æ‡¶Å‡¶¶‡¶™‡ßÅ‡¶∞",
  experience: "‡ßß‡ß¶ ‡¶¨‡¶õ‡¶∞",
  boatName: "‡¶Æ‡¶æ ‡¶á‡¶≤‡¶ø‡¶∂-‡ßß",
  joinDate: "‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø ‡ß®‡ß¶‡ß®‡ß¶",
  totalCatch: "‡ßß‡ß®‡ß¶‡ß¶ ‡¶ï‡ßá‡¶ú‡¶ø",
  avatar: "/placeholder-user.jpg", // Using a placeholder image
}

export default function jelePage() {
  // const { data: session, status } = useSession() // Commented out
  const { fishEntries, addFishEntry } = useFishData()
  const [showAddForm, setShowAddForm] = useState(false)
  const [showProfile, setShowProfile] = useState(false)
  const [activeTab, setActiveTab] = useState("my-fish")
  const [selectedMarket, setSelectedMarket] = useState<any>(null)

  const handleAddFish = (newFish: any) => {
    addFishEntry(newFish)
    setShowAddForm(false)
  }

  const handleGoToMarket = (marketId: number) => {
    // Find the selected market
    const market = wholesaleMarkets.find(m => m.id === marketId)
    setSelectedMarket(market)
    // Switch to transactions tab when user wants to go to a market
    setActiveTab("transactions")
  }

  // Commented out session handling and route protection
  // if (status === "loading") {
  //   return <div className="min-h-screen flex flex-col items-center justify-center bg-gray-50 dark:bg-background"><p>Loading session...</p></div>;
  // }
  //
  // if (status === "unauthenticated" || !session || !session.user || session.user.role !== "‡¶ú‡ßá‡¶≤‡ßá") {
  //   redirect("/login");
  //   return null; 
  // }

  // Using static user profile directly
  const userProfileToDisplay = staticUserProfile;

  return (
    <div className="min-h-screen flex flex-col bg-gray-50 dark:bg-background">
      <Header />

      <main className="flex-grow container mx-auto px-4 py-8">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold">‡¶ú‡ßá‡¶≤‡ßá ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</h1>
          <div className="flex gap-4">
            <Button variant="outline" onClick={() => setShowProfile(!showProfile)} className="flex items-center gap-2">
              <Image
                src={userProfileToDisplay.avatar} // Changed to use static profile
                alt="Profile"
                width={32}
                height={32}
                className="rounded-full"
              />
              <span>{userProfileToDisplay.name}</span> {/* Changed to use static profile */}
            </Button>
          </div>
        </div>

        {showProfile && (
          <Card className="mb-8">
            <CardContent className="pt-6">
            <UserProfile user={userProfileToDisplay} /> {/* Changed to use static profile */}
            </CardContent>
          </Card>
        )}

        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid w-full grid-cols-4 mb-8">
            <TabsTrigger value="my-fish" className="text-lg py-3">
              ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ß‡¶∞‡¶æ ‡¶Æ‡¶æ‡¶õ
            </TabsTrigger>
            <TabsTrigger value="wholesale" className="text-lg py-3">
              ‡¶Ü‡¶°‡¶º‡¶§‡ßá‡¶∞ ‡¶¶‡¶∞
            </TabsTrigger>
            <TabsTrigger value="transactions" className="text-lg py-3">
              ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶®
            </TabsTrigger>
            <TabsTrigger value="farming-profile" className="text-lg py-3">
              ‡¶ö‡¶æ‡¶∑‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤
            </TabsTrigger>
          </TabsList>

          <TabsContent value="my-fish">
            <div className="mb-6 flex justify-between items-center">
              <h2 className="text-2xl font-semibold">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ß‡¶∞‡¶æ ‡¶Æ‡¶æ‡¶õ</h2>
              <Button onClick={() => setShowAddForm(!showAddForm)} className="bg-primary hover:bg-primary/90">
                <Plus className="mr-2 h-4 w-4" /> ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡¶æ‡¶õ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
              </Button>
            </div>

            {showAddForm && (
              <Card className="mb-6">
                <CardHeader>
                  <CardTitle>‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡¶æ‡¶õ‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</CardTitle>
                </CardHeader>
                <CardContent>
                  <FishEntryForm onSubmit={handleAddFish} onCancel={() => setShowAddForm(false)} />
                </CardContent>
              </Card>
            )}

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {fishEntries.map((fish) => (
                <FishCard key={fish.id} fish={fish} />
              ))}
            </div>
          </TabsContent>

          <TabsContent value="wholesale">
            <div className="mb-6">
              <h2 className="text-2xl font-semibold">‡¶Ü‡¶°‡¶º‡¶§‡ßá‡¶∞ ‡¶¶‡¶∞</h2>
              <p className="text-gray-600 dark:text-gray-400 mt-2">
                ‡¶®‡¶ø‡¶ï‡¶ü‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶Ü‡¶°‡¶º‡¶§‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶¶‡¶æ‡¶Æ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶Ü‡¶°‡¶º‡¶§‡ßá ‡¶Æ‡¶æ‡¶õ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {wholesaleMarkets.map((market) => (
                <WholesaleMarketCard 
                  key={market.id} 
                  market={market} 
                  onGoToMarket={handleGoToMarket}
                />
              ))}
            </div>
          </TabsContent>

          <TabsContent value="transactions">
            <div className="mb-6">
              <h2 className="text-2xl font-semibold">‡¶Æ‡¶æ‡¶õ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º ‡¶ì ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶®</h2>
              <p className="text-gray-600 dark:text-gray-400 mt-2">
                ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶õ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡¶æ‡¶¨, ‡¶¶‡¶∞-‡¶ï‡¶∑‡¶æ‡¶ï‡¶∑‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®
              </p>
              {selectedMarket && (
                <div className="mt-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800">
                  <p className="text-blue-700 dark:text-blue-300 font-medium">
                    üéØ ‡¶Ü‡¶™‡¶®‡¶ø <strong>{selectedMarket.name}</strong> ‡¶Ü‡¶°‡¶º‡¶§‡ßá ‡¶Ø‡ßá‡¶§‡ßá ‡¶ö‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡¶®‡•§
                  </p>
                  <p className="text-sm text-blue-600 dark:text-blue-400 mt-1">
                    ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á ‡¶Ü‡¶°‡¶º‡¶§‡ßá ‡¶Æ‡¶æ‡¶õ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶® ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§
                  </p>
                </div>
              )}
            </div>
            <JeleTransactionsTab />
          </TabsContent>

          <TabsContent value="farming-profile">
            <div className="mb-6">
              <h2 className="text-2xl font-semibold">‡¶ö‡¶æ‡¶∑‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤</h2>
              <p className="text-gray-600 dark:text-gray-400 mt-2">
                ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶õ ‡¶ö‡¶æ‡¶∑‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶è‡¶á ‡¶§‡¶•‡ßç‡¶Ø‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§‡¶ï‡ßÉ‡¶§ ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂ ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§
              </p>
            </div>
            <FarmingProfileManager />
          </TabsContent>
        </Tabs>
      </main>

      <Footer />
    </div>
  )
}
